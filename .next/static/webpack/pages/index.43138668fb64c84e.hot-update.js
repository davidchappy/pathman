"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pathman/draw.ts":
/*!*************************!*\
  !*** ./pathman/draw.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"./pathman/types.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"./pathman/config.ts\");\n\n\nconst useDraw = (canvas, state)=>{\n    const ctx = canvas.getContext(\"2d\");\n    const backgroundCanvas = document.createElement(\"canvas\");\n    backgroundCanvas.width = canvas.width;\n    backgroundCanvas.height = canvas.height;\n    const backgroundCtx = backgroundCanvas.getContext(\"2d\");\n    let mazePosition = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    };\n    const drawBackground = ()=>{\n        backgroundCtx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.background;\n        ctx.fillRect(0, 0, window.innerWidth / state.scale, window.innerHeight / state.scale);\n    };\n    const calculateMazePosition = ()=>{\n        const mazeWidth = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].maze.cells[0].length * _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize;\n        const mazeHeight = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].maze.cells.length * _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize;\n        return {\n            x: canvas.width / 2,\n            y: canvas.height / 2 + mazeHeight / 2,\n            width: mazeWidth,\n            height: mazeHeight\n        };\n    };\n    mazePosition = calculateMazePosition();\n    // window.addEventListener(\"resize\", () => {\n    //   mazePosition = calculateMazePosition()\n    // })\n    window.document.addEventListener(\"DOMContentLoaded\", ()=>{\n        mazePosition = calculateMazePosition();\n    });\n    const drawMaze = ()=>{\n        const cellSize = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize;\n        const cells = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].maze.cells;\n        ctx.save();\n        ctx.translate(mazePosition.x, mazePosition.y);\n        cells.forEach((row, y)=>{\n            row.forEach((cell, x)=>{\n                const cellX = x * cellSize;\n                const cellY = y * cellSize;\n                if (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].showGrid) {\n                    // draw a box around each cell\n                    ctx.strokeStyle = \"green\";\n                    ctx.lineWidth = 1;\n                    ctx.strokeRect(cellX, cellY, cellSize, cellSize);\n                }\n                if (cell === _types__WEBPACK_IMPORTED_MODULE_0__.CellType.WallHorizontal) {\n                    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.wall;\n                    ctx.fillRect(cellX, cellY + (cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellSize, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth);\n                }\n                if (cell === _types__WEBPACK_IMPORTED_MODULE_0__.CellType.WallVertical) {\n                    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.wall;\n                    ctx.fillRect(cellX + (cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth, cellSize);\n                }\n                if (cell === _types__WEBPACK_IMPORTED_MODULE_0__.CellType.WallCornerTopLeft) {\n                    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.wall;\n                    ctx.fillRect(cellX + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth);\n                    ctx.fillRect(cellX + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2);\n                }\n                if (cell === _types__WEBPACK_IMPORTED_MODULE_0__.CellType.WallCornerTopRight) {\n                    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.wall;\n                    ctx.fillRect(cellX, cellY + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth);\n                    ctx.fillRect(cellX + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2);\n                }\n                if (cell === _types__WEBPACK_IMPORTED_MODULE_0__.CellType.WallCornerBottomLeft) {\n                    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.wall;\n                    ctx.fillRect(cellX + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2);\n                    ctx.fillRect(cellX + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth);\n                }\n                if (cell === _types__WEBPACK_IMPORTED_MODULE_0__.CellType.WallCornerBottomRight) {\n                    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.wall;\n                    ctx.fillRect(cellX, cellY + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth);\n                    ctx.fillRect(cellX + (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 - _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2), cellY, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2 + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].wallWidth / 2);\n                }\n            });\n        });\n        ctx.restore();\n    };\n    const drawRulers = ()=>{\n        const padding = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize;\n        ctx.save();\n        ctx.translate(mazePosition.x - padding, mazePosition.y - padding);\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(mazePosition.width + padding * 2, 0);\n        ctx.stroke();\n        // add numbers for x cells, 1 above each cell\n        ctx.fillStyle = \"red\";\n        _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].maze.cells[0].forEach((cell, x)=>{\n            ctx.fillText(x.toString(), _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize + x * _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 4, -padding / 2);\n        });\n        ctx.fill();\n        ctx.strokeStyle = \"green\";\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, mazePosition.height + padding * 2);\n        ctx.stroke();\n        // add numbers for y cells, 1 left of each cell\n        ctx.fillStyle = \"green\";\n        _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].maze.cells.forEach((row, y)=>{\n            ctx.fillText(y.toString(), -padding, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize + y * _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize + _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize / 2);\n        });\n        ctx.fill();\n        ctx.restore();\n    };\n    const drawEntityRelativeToMaze = (drawFunction)=>{\n        ctx.save();\n        ctx.translate(mazePosition.x, mazePosition.y);\n        drawFunction();\n        ctx.restore();\n    };\n    const drawStats = ()=>{\n        const boxPadding = 10;\n        // Box dimensions and position\n        const boxWidth = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sidebarWidth - boxPadding;\n        const boxHeight = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sidebarWidth - boxPadding;\n        const boxX = ctx.canvas.width - boxWidth - boxPadding;\n        const boxY = boxPadding;\n        ctx.strokeStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.primary;\n        ctx.lineWidth = 2;\n        ctx.strokeRect(boxX, boxY, boxWidth, boxHeight);\n        ctx.font = \"16px Helvetica, Arial, sans-serif\";\n        ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.primary;\n        ctx.lineWidth = 2;\n        const textX = boxX + boxPadding;\n        const textY = boxY + (boxHeight - 50) / 2;\n        ctx.textAlign = \"left\";\n        ctx.fillText(\"FPS: \".concat(state.currentFPS.toFixed(0)), textX, textY);\n        ctx.fillText(\"Pellets: \".concat(state.pellets.length), textX, textY + boxPadding * 2);\n        // Add reset button\n        const buttonX = boxX + boxPadding;\n        const buttonY = textY + (boxPadding * 2 + 20);\n        const buttonWidth = boxWidth - boxPadding * 2;\n        const buttonHeight = 30;\n        ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.primary;\n        ctx.fillRect(buttonX, buttonY, buttonWidth, buttonHeight);\n        ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.secondaryText;\n        ctx.fillText(\"Reset\", buttonX + boxPadding, buttonY + boxPadding * 2);\n    };\n    const drawPathman = ()=>{\n        drawEntityRelativeToMaze(()=>{\n            const { x, y, mouthAngle, direction } = state.pathman;\n            const { size } = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pathman;\n            const radius = size / 2;\n            ctx.save();\n            ctx.translate(x, y);\n            switch(direction){\n                case \"right\":\n                    ctx.rotate(0) // No rotation\n                    ;\n                    break;\n                case \"down\":\n                    ctx.rotate(Math.PI / 2) // Rotate 90 degrees clockwise\n                    ;\n                    break;\n                case \"left\":\n                    ctx.rotate(Math.PI) // Rotate 180 degrees\n                    ;\n                    break;\n                case \"up\":\n                    ctx.rotate(-Math.PI / 2) // Rotate 90 degrees counter-clockwise\n                    ;\n                    break;\n            }\n            ctx.beginPath();\n            // Outer circle\n            ctx.arc(0, 0, radius, mouthAngle, Math.PI * 2 - mouthAngle, true);\n            ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.primary;\n            // Mouth\n            ctx.lineTo(-3, 0);\n            const upperLipEndX = radius * Math.cos(Math.PI * 2 - mouthAngle);\n            const upperLipEndY = -radius * Math.sin(Math.PI * 2 - mouthAngle);\n            ctx.moveTo(upperLipEndX, upperLipEndY);\n            ctx.lineTo(0, 0);\n            // Draw it and reset the context\n            ctx.fill();\n            ctx.restore();\n        });\n    };\n    const drawPellets = ()=>{\n        drawEntityRelativeToMaze(()=>{\n            for (const pellet of state.pellets){\n                ctx.beginPath();\n                ctx.arc(pellet.x, pellet.y, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pellets.size, 0, Math.PI * 2, true);\n                ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.primary;\n                ctx.fill();\n            }\n            for (const pellet of state.powerPellets){\n                ctx.beginPath();\n                ctx.arc(pellet.x, pellet.y, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].powerPellets.size, 0, Math.PI * 2, true);\n                ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].colors.primary;\n                ctx.fill();\n            }\n        });\n    };\n    const drawGhosts = ()=>{\n        drawEntityRelativeToMaze(()=>{\n            const size = _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ghosts.size;\n            const radius = size / 2;\n            const colors = [\n                \"red\",\n                \"blue\",\n                \"pink\",\n                \"orange\"\n            ];\n            state.ghosts.forEach((ghost, index)=>{\n                // REturn index to 0 if it's greater than 3\n                const color = colors[index % colors.length];\n                ctx.fillStyle = color;\n                ctx.beginPath();\n                ctx.arc(ghost.x + 1, ghost.y, radius, Math.PI * -0.5, Math.PI + Math.PI * -0.2, true);\n                ctx.arc(ghost.x - 1, ghost.y, radius, Math.PI * 0.2, Math.PI + Math.PI * 0.5, true);\n                ctx.fillRect(ghost.x - radius + 1, ghost.y - 2, size - 2, size / 2);\n                ctx.fill();\n                ctx.beginPath();\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = \"black\";\n                ctx.fillStyle = \"black\";\n                ctx.moveTo(ghost.x - 6, ghost.y + radius);\n                ctx.lineTo(ghost.x - 4, ghost.y + radius - 6);\n                ctx.lineTo(ghost.x, ghost.y + radius);\n                ctx.lineTo(ghost.x + 4, ghost.y + radius - 6);\n                ctx.lineTo(ghost.x + 6, ghost.y + radius);\n                ctx.stroke();\n                ctx.fill();\n                // add eyes\n                ctx.beginPath();\n                ctx.fillStyle = \"white\";\n                ctx.arc(ghost.x - 4, ghost.y - 3, 3, 0, Math.PI * 2, true);\n                ctx.arc(ghost.x + 4, ghost.y - 3, 3, 0, Math.PI * 2, true);\n                ctx.fill();\n                // add pupils\n                ctx.beginPath();\n                ctx.fillStyle = \"black\";\n                ctx.arc(ghost.x - 4, ghost.y - 3.5, 1.5, 0, Math.PI * 2, true);\n                ctx.arc(ghost.x + 4, ghost.y - 3.5, 1.5, 0, Math.PI * 2, true);\n                ctx.fill();\n            });\n        });\n    };\n    const drawOverlay = ()=>{\n        if (state.phase === \"playing\") return;\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        ctx.font = \"48px Helvetica, Arial, sans-serif\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(state.overlayText, canvas.width / 2, canvas.height / 2);\n    };\n    const drawClickLocation = ()=>{\n        if (state.debug.clickLocation === null) return;\n        const { x, y } = state.debug.clickLocation;\n        ctx.beginPath();\n        ctx.arc(x, y, 4, 0, Math.PI * 2, true);\n        ctx.fillStyle = \"red\";\n        ctx.fill();\n    };\n    const drawCurrentPathmanCell = ()=>{\n        if (state.debug.currentPathmanPosition === null) return;\n        const { x, y } = state.debug.currentPathmanPosition;\n        const cellX = x * _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize;\n        const cellY = y * _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize;\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.strokeRect(cellX, cellY, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize, _config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].cellSize);\n    };\n    const draw = ()=>{\n        ctx.save();\n        ctx.scale(1, 1);\n        // Adapt to the current scale\n        ctx.scale(state.scale, state.scale);\n        drawBackground();\n        drawMaze();\n        if (_config__WEBPACK_IMPORTED_MODULE_1__[\"default\"].showRulers) {\n            drawRulers();\n        }\n        drawStats();\n        drawPathman();\n        drawPellets();\n        drawGhosts();\n        drawOverlay();\n        // drawCurrentPathmanCell()\n        // drawClickLocation()\n        ctx.restore();\n    };\n    return {\n        draw,\n        drawCurrentPathmanCell,\n        drawClickLocation,\n        drawOverlay,\n        drawGhosts,\n        drawPellets,\n        drawPathman,\n        drawStats,\n        drawMaze,\n        drawBackground\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useDraw);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pathman/draw.ts\n"));

/***/ })

});